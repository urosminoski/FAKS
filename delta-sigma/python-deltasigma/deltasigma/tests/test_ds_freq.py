# -*- coding: utf-8 -*-
# test_ds_freq.py
# This module provides the tests for the ds_freq() function.
# Copyright 2014 Giuseppe Venturini & Shayne Hodge
# This file is part of python-deltasigma.
#
# python-deltasigma is a 1:1 Python replacement of Richard Schreier's
# MATLAB delta sigma toolbox (aka "delsigma"), upon which it is heavily based.
# The delta sigma toolbox is (c) 2009, Richard Schreier.
#
# python-deltasigma is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# LICENSE file for the licensing terms.

import unittest
import numpy as np
import deltasigma as ds


class TestDSFreq(unittest.TestCase):
    """Tests ds_freq()"""

    def setUp(self):
        pass

    def test_res_equals_tres(self):
        """Check ds_freq() output to known values."""
        a = ds.ds_freq(osr=128, f0=0.0, quadrature=True)
        b = np.diff(a)
        res = (0.00190595677588, 0.00510204081633,
               0.207803148686, 0.00491921819577)
        tres = (a.mean(), b.mean(), a.std(), b.std())
        self.assertTrue(np.allclose(res, tres, atol=1e-8, rtol=1e-5))

    def testds_freq2(self):
        """Test ds_freq() with quadrature=True"""
        ref = np.array((-0.500000000000000, -0.489898989898990,
                        -0.479797979797980, -0.469696969696970,
                        -0.459595959595960, -0.449494949494950,
                        -0.439393939393939, -0.429292929292929,
                        -0.419191919191919, -0.409090909090909,
                        -0.398989898989899, -0.388888888888889,
                        -0.378787878787879, -0.368686868686869,
                        -0.358585858585859, -0.348484848484849,
                        -0.338383838383838, -0.328282828282828,
                        -0.318181818181818, -0.308080808080808,
                        -0.297979797979798, -0.287878787878788,
                        -0.277777777777778, -0.267676767676768,
                        -0.257575757575758, -0.247474747474747,
                        -0.237373737373737, -0.227272727272727,
                        -0.217171717171717, -0.207070707070707,
                        -0.196969696969697, -0.186868686868687,
                        -0.176767676767677, -0.166666666666667,
                        -0.156565656565657, -0.151250000000000,
                        -0.150303030303030, -0.149356060606061,
                        -0.148409090909091, -0.147462121212121,
                        -0.146515151515152, -0.145568181818182,
                        -0.144621212121212, -0.143674242424242,
                        -0.142727272727273, -0.141780303030303,
                        -0.140833333333333, -0.139886363636364,
                        -0.138939393939394, -0.137992424242424,
                        -0.137045454545455, -0.136098484848485,
                        -0.135151515151515, -0.134204545454545,
                        -0.133257575757576, -0.132310606060606,
                        -0.131363636363636, -0.130416666666667,
                        -0.129469696969697, -0.128522727272727,
                        -0.127575757575758, -0.126628787878788,
                        -0.125681818181818, -0.124734848484848,
                        -0.123787878787879, -0.122840909090909,
                        -0.121893939393939, -0.120946969696970,
                        -0.120000000000000, -0.119053030303030,
                        -0.118106060606061, -0.117159090909091,
                        -0.116212121212121, -0.115265151515152,
                        -0.114318181818182, -0.113371212121212,
                        -0.112424242424242, -0.111477272727273,
                        -0.110530303030303, -0.109583333333333,
                        -0.108636363636364, -0.107689393939394,
                        -0.106742424242424, -0.105795454545455,
                        -0.104848484848485, -0.103901515151515,
                        -0.102954545454545, -0.102007575757576,
                        -0.101060606060606, -0.100113636363636,
                        -0.0991666666666667, -0.0982196969696970,
                        -0.0972727272727273, -0.0963257575757576,
                        -0.0953787878787879, -0.0944318181818182,
                        -0.0934848484848485, -0.0925378787878788,
                        -0.0915909090909091, -0.0906439393939394,
                        -0.0896969696969697, -0.0887500000000000,
                        -0.0878030303030303, -0.0868560606060606,
                        -0.0859090909090909, -0.0849621212121212,
                        -0.0840151515151515, -0.0830681818181818,
                        -0.0821212121212121, -0.0811742424242424,
                        -0.0802272727272727, -0.0792803030303030,
                        -0.0783333333333333, -0.0773863636363636,
                        -0.0764393939393939, -0.0754924242424242,
                        -0.0745454545454545, -0.0735984848484848,
                        -0.0726515151515152, -0.0717045454545455,
                        -0.0707575757575758, -0.0698106060606061,
                        -0.0688636363636364, -0.0679166666666667,
                        -0.0669696969696970, -0.0660227272727273,
                        -0.0650757575757576, -0.0641287878787879,
                        -0.0631818181818182, -0.0622348484848485,
                        -0.0612878787878788, -0.0603409090909091,
                        -0.0593939393939394, -0.0584469696969697,
                        -0.0575000000000000, -0.0555555555555556,
                        -0.0454545454545455, -0.0353535353535354,
                        -0.0252525252525253, -0.0151515151515151,
                        -0.00505050505050503, 0.00505050505050508,
                        0.0151515151515151, 0.0252525252525253,
                        0.0353535353535354, 0.0454545454545454,
                        0.0555555555555556, 0.0656565656565656,
                        0.0757575757575758, 0.0858585858585859,
                        0.0887500000000000, 0.0896969696969697,
                        0.0906439393939394, 0.0915909090909091,
                        0.0925378787878788, 0.0934848484848485,
                        0.0944318181818182, 0.0953787878787879,
                        0.0963257575757576, 0.0972727272727273,
                        0.0982196969696970, 0.0991666666666667,
                        0.100113636363636, 0.101060606060606, 0.102007575757576,
                        0.102954545454545, 0.103901515151515, 0.104848484848485,
                        0.105795454545455, 0.106742424242424, 0.107689393939394,
                        0.108636363636364, 0.109583333333333, 0.110530303030303,
                        0.111477272727273, 0.112424242424242, 0.113371212121212,
                        0.114318181818182, 0.115265151515152, 0.116212121212121,
                        0.117159090909091, 0.118106060606061, 0.119053030303030,
                        0.120000000000000, 0.120946969696970, 0.121893939393939,
                        0.122840909090909, 0.123787878787879, 0.124734848484848,
                        0.125681818181818, 0.126628787878788, 0.127575757575758,
                        0.128522727272727, 0.129469696969697, 0.130416666666667,
                        0.131363636363636, 0.132310606060606, 0.133257575757576,
                        0.134204545454545, 0.135151515151515, 0.136098484848485,
                        0.137045454545455, 0.137992424242424, 0.138939393939394,
                        0.139886363636364, 0.140833333333333, 0.141780303030303,
                        0.142727272727273, 0.143674242424242, 0.144621212121212,
                        0.145568181818182, 0.146515151515152, 0.147462121212121,
                        0.148409090909091, 0.149356060606061, 0.150303030303030,
                        0.151250000000000, 0.152196969696970, 0.153143939393939,
                        0.154090909090909, 0.155037878787879, 0.155984848484848,
                        0.156931818181818, 0.157878787878788, 0.158825757575758,
                        0.159772727272727, 0.160719696969697, 0.161666666666667,
                        0.162613636363636, 0.163560606060606, 0.164507575757576,
                        0.165454545454545, 0.166401515151515, 0.167348484848485,
                        0.168295454545455, 0.169242424242424, 0.170189393939394,
                        0.171136363636364, 0.172083333333333, 0.173030303030303,
                        0.173977272727273, 0.174924242424242, 0.175871212121212,
                        0.176818181818182, 0.177765151515152, 0.178712121212121,
                        0.179659090909091, 0.180606060606061, 0.181553030303030,
                        0.182500000000000, 0.186868686868687, 0.196969696969697,
                        0.207070707070707, 0.217171717171717, 0.227272727272727,
                        0.237373737373737, 0.247474747474748, 0.257575757575758,
                        0.267676767676768, 0.277777777777778, 0.287878787878788,
                        0.297979797979798, 0.308080808080808, 0.318181818181818,
                        0.328282828282828, 0.338383838383838, 0.348484848484849,
                        0.358585858585859, 0.368686868686869, 0.378787878787879,
                        0.388888888888889, 0.398989898989899, 0.409090909090909,
                        0.419191919191919, 0.429292929292929, 0.439393939393939,
                        0.449494949494950, 0.459595959595960, 0.469696969696970,
                        0.479797979797980, 0.489898989898990,
                        0.500000000000000))
        res = ds.ds_freq(32, 0.12, True)
        assert np.allclose(res, ref, atol=1e-8, rtol=1e-5)

    def testds_freq3(self):
        """Test ds_freq() with quadrature=False"""
        ref = np.array((0.0, 0.00505050505050505, 0.0101010101010101,
                        0.0151515151515152, 0.0202020202020202,
                        0.0252525252525253, 0.0303030303030303,
                        0.0353535353535354, 0.0404040404040404,
                        0.0454545454545455, 0.0505050505050505,
                        0.0555555555555556, 0.0606060606060606,
                        0.0656565656565657, 0.0707070707070707,
                        0.0757575757575758, 0.0808080808080808,
                        0.0858585858585859, 0.0887500000000000,
                        0.0896969696969697, 0.0906439393939394,
                        0.0915909090909091, 0.0925378787878788,
                        0.0934848484848485, 0.0944318181818182,
                        0.0953787878787879, 0.0963257575757576,
                        0.0972727272727273, 0.0982196969696970,
                        0.0991666666666667, 0.100113636363636,
                        0.101060606060606, 0.102007575757576, 0.102954545454545,
                        0.103901515151515, 0.104848484848485, 0.105795454545455,
                        0.106742424242424, 0.107689393939394, 0.108636363636364,
                        0.109583333333333, 0.110530303030303, 0.111477272727273,
                        0.112424242424242, 0.113371212121212, 0.114318181818182,
                        0.115265151515152, 0.116212121212121, 0.117159090909091,
                        0.118106060606061, 0.119053030303030, 0.120000000000000,
                        0.120946969696970, 0.121893939393939, 0.122840909090909,
                        0.123787878787879, 0.124734848484848, 0.125681818181818,
                        0.126628787878788, 0.127575757575758, 0.128522727272727,
                        0.129469696969697, 0.130416666666667, 0.131363636363636,
                        0.132310606060606, 0.133257575757576, 0.134204545454545,
                        0.135151515151515, 0.136098484848485, 0.137045454545455,
                        0.137992424242424, 0.138939393939394, 0.139886363636364,
                        0.140833333333333, 0.141780303030303, 0.142727272727273,
                        0.143674242424242, 0.144621212121212, 0.145568181818182,
                        0.146515151515152, 0.147462121212121, 0.148409090909091,
                        0.149356060606061, 0.150303030303030, 0.151250000000000,
                        0.152196969696970, 0.153143939393939, 0.154090909090909,
                        0.155037878787879, 0.155984848484848, 0.156931818181818,
                        0.157878787878788, 0.158825757575758, 0.159772727272727,
                        0.160719696969697, 0.161666666666667, 0.162613636363636,
                        0.163560606060606, 0.164507575757576, 0.165454545454545,
                        0.166401515151515, 0.167348484848485, 0.168295454545455,
                        0.169242424242424, 0.170189393939394, 0.171136363636364,
                        0.172083333333333, 0.173030303030303, 0.173977272727273,
                        0.174924242424242, 0.175871212121212, 0.176818181818182,
                        0.177765151515152, 0.178712121212121, 0.179659090909091,
                        0.180606060606061, 0.181553030303030, 0.182500000000000,
                        0.186868686868687, 0.191919191919192, 0.196969696969697,
                        0.202020202020202, 0.207070707070707, 0.212121212121212,
                        0.217171717171717, 0.222222222222222, 0.227272727272727,
                        0.232323232323232, 0.237373737373737, 0.242424242424242,
                        0.247474747474748, 0.252525252525253, 0.257575757575758,
                        0.262626262626263, 0.267676767676768, 0.272727272727273,
                        0.277777777777778, 0.282828282828283, 0.287878787878788,
                        0.292929292929293, 0.297979797979798, 0.303030303030303,
                        0.308080808080808, 0.313131313131313, 0.318181818181818,
                        0.323232323232323, 0.328282828282828, 0.333333333333333,
                        0.338383838383838, 0.343434343434343, 0.348484848484849,
                        0.353535353535354, 0.358585858585859, 0.363636363636364,
                        0.368686868686869, 0.373737373737374, 0.378787878787879,
                        0.383838383838384, 0.388888888888889, 0.393939393939394,
                        0.398989898989899, 0.404040404040404, 0.409090909090909,
                        0.414141414141414, 0.419191919191919, 0.424242424242424,
                        0.429292929292929, 0.434343434343434, 0.439393939393939,
                        0.444444444444444, 0.449494949494950, 0.454545454545455,
                        0.459595959595960, 0.464646464646465, 0.469696969696970,
                        0.474747474747475, 0.479797979797980, 0.484848484848485,
                        0.489898989898990, 0.494949494949495, 0.5))
        res = ds.ds_freq(32, 0.12, False)
        assert np.allclose(res, ref, atol=1e-8, rtol=1e-5)


